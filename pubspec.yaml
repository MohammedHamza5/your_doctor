name: your_doctor_3
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.4

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # Flutter and Dart packages
  cupertino_icons: ^1.0.8 # حزمة توفر أيقونات مصممة خصيصًا لتطبيقات iOS (Cupertino).
  flutter_bloc: ^8.1.6 # حزمة لإدارة الحالة باستخدام BLoC (Business Logic Component) في تطبيقات Flutter.
  freezed_annotation: ^2.2.0 # مكتبة لتوليد الكود تلقائيًا لدعم إنشاء كائنات غير قابلة للتغيير باستخدام Freezed.
  get_it: ^8.0.2 # حزمة توفر مزود خدمة أو Locator لحقن التبعيات وإدارة الكائنات بسهولة.
  json_annotation: ^4.9.0 # مكتبة توفر تعليقات Annotation لتسهيل تحويل البيانات بين JSON والكائنات في Dart.
  json_serializable: ^6.8.0 # مكتبة تولد كود التحويل بين JSON والكائنات Dart بشكل تلقائي بناءً على التعليقات.
  dio: ^5.7.0 # مكتبة لتسهيل إجراء طلبات HTTP مع ميزات عديدة مثل المعترضات Interceptors وإدارة الأخطاء.
  retrofit: ^4.4.1 # مكتبة توفر واجهة برمجة تطبيقات RESTful سهلة الاستخدام مع Dio لتحسين وتسهيل طلبات HTTP.
  pretty_dio_logger: ^1.4.0 # مكتبة تضيف Interceptor لعرض طلبات واستجابات HTTP بشكل جميل ومنظم في وحدة التحكم.
  easy_localization: ^3.0.7 # مكتبة لتسهيل إضافة الترجمات ودعم لغات متعددة في تطبيقات Flutter.
  intl: ^0.19.0 # مكتبة لدعم التنسيق والتدويل، مثل تنسيق التواريخ والأرقام والنصوص بحسب اللغة.
  flutter_svg: ^2.0.14
  flutter_screenutil: ^5.9.3

dev_dependencies:
  flutter_test:
    sdk: flutter # مكتبة لاختبار تطبيقات Flutter.

  # Development-only packages
  freezed: ^2.4.2 # مكتبة لإنشاء كود تلقائي للكائنات غير القابلة للتغيير ومزودة بـ Union Types.
  retrofit_generator: ^9.1.4 # مولد كود يدمج Retrofit مع Dio، يسهل إنشاء واجهة برمجة RESTful في الكود.
  flutter_native_splash: ^2.4.2 # مكتبة لتخصيص شاشة الإقلاع (Splash Screen) عند تشغيل التطبيق.

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/svgs/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
